{
  "timestamp": "2025-07-17T15:39:11.346416",
  "test_type": "python_tests",
  "command": "python -m pytest C:\\cursor\\collective-memory\\collective-memory-app\\tests\\test_enhanced_query_engine.py -v --tb=short",
  "duration_seconds": 35.0,
  "exit_code": 1,
  "stdout": "============================= test session starts =============================\nplatform win32 -- Python 3.13.4, pytest-8.3.5, pluggy-1.5.0 -- C:\\Users\\hp\\AppData\\Local\\Programs\\Python\\Python313\\python.exe\ncachedir: .pytest_cache\nrootdir: C:\\cursor\\collective-memory\\collective-memory-app\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, aiohttp-1.1.0, asyncio-1.0.0, base-url-2.1.0, cov-6.2.1, django-4.11.1, playwright-0.7.0\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 19 items\n\ncollective-memory-app\\tests\\test_enhanced_query_engine.py::TestEnhancedSearchQuery::test_default_parameters PASSED [  5%]\ncollective-memory-app\\tests\\test_enhanced_query_engine.py::TestEnhancedSearchQuery::test_custom_parameters PASSED [ 10%]\ncollective-memory-app\\tests\\test_enhanced_query_engine.py::TestEnhancedSearchResult::test_default_enhanced_fields PASSED [ 15%]\ncollective-memory-app\\tests\\test_enhanced_query_engine.py::TestEnhancedQueryEngine::test_initialization PASSED [ 21%]\ncollective-memory-app\\tests\\test_enhanced_query_engine.py::TestEnhancedQueryEngine::test_get_cache_key PASSED [ 26%]\ncollective-memory-app\\tests\\test_enhanced_query_engine.py::TestEnhancedQueryEngine::test_clean_cache FAILED [ 31%]\ncollective-memory-app\\tests\\test_enhanced_query_engine.py::TestEnhancedQueryEngine::test_convert_to_enhanced_result PASSED [ 36%]\ncollective-memory-app\\tests\\test_enhanced_query_engine.py::TestEnhancedQueryEngine::test_calculate_content_quality FAILED [ 42%]\ncollective-memory-app\\tests\\test_enhanced_query_engine.py::TestEnhancedQueryEngine::test_calculate_freshness_score PASSED [ 47%]\ncollective-memory-app\\tests\\test_enhanced_query_engine.py::TestEnhancedQueryEngine::test_calculate_popularity_score PASSED [ 52%]\ncollective-memory-app\\tests\\test_enhanced_query_engine.py::TestEnhancedQueryEngine::test_calculate_context_relevance PASSED [ 57%]\ncollective-memory-app\\tests\\test_enhanced_query_engine.py::TestEnhancedQueryEngine::test_extract_entities FAILED [ 63%]\ncollective-memory-app\\tests\\test_enhanced_query_engine.py::TestEnhancedQueryEngine::test_calculate_readability FAILED [ 68%]\ncollective-memory-app\\tests\\test_enhanced_query_engine.py::TestEnhancedQueryEngine::test_analyze_query_intent FAILED [ 73%]\ncollective-memory-app\\tests\\test_enhanced_query_engine.py::TestEnhancedQueryEngine::test_get_performance_stats PASSED [ 78%]\ncollective-memory-app\\tests\\test_enhanced_query_engine.py::TestEnhancedQueryEngine::test_clear_cache FAILED [ 84%]\ncollective-memory-app\\tests\\test_enhanced_query_engine.py::TestEnhancedQueryEngine::test_search_without_ml PASSED [ 89%]\ncollective-memory-app\\tests\\test_enhanced_query_engine.py::TestEnhancedQueryEngine::test_search_with_caching FAILED [ 94%]\ncollective-memory-app\\tests\\test_enhanced_query_engine.py::TestIntegration::test_full_search_workflow PASSED [100%]\n\n================================== FAILURES ===================================\n__________________ TestEnhancedQueryEngine.test_clean_cache ___________________\ncollective-memory-app\\tests\\test_enhanced_query_engine.py:187: in test_clean_cache\n    assert len(_SEMANTIC_CACHE) <= 500  # Should be reduced to half\nE   AssertionError: assert 1100 <= 500\nE    +  where 1100 = len({'key_0': 'value_0', 'key_1': 'value_1', 'key_10': 'value_10', 'key_100': 'value_100', ...})\n___________ TestEnhancedQueryEngine.test_calculate_content_quality ____________\ncollective-memory-app\\tests\\test_enhanced_query_engine.py:237: in test_calculate_content_quality\n    assert score > 0.5  # Should be high quality\nE   assert 0.4 > 0.5\n________________ TestEnhancedQueryEngine.test_extract_entities ________________\ncollective-memory-app\\tests\\test_enhanced_query_engine.py:387: in test_extract_entities\n    assert any(\"Context7\" in str(entity) for entity in entities)\nE   assert False\nE    +  where False = any(<generator object TestEnhancedQueryEngine.test_extract_entities.<locals>.<genexpr> at 0x000001C064319700>)\n_____________ TestEnhancedQueryEngine.test_calculate_readability ______________\ncollective-memory-app\\tests\\test_enhanced_query_engine.py:400: in test_calculate_readability\n    score = enhanced_query_engine._calculate_readability(readable_text)\ncollective-memory-app\\src\\enhanced_query_engine.py:647: in _calculate_readability\n    len(sent_tokenize(content))\nC:\\Users\\hp\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\nltk\\tokenize\\__init__.py:119: in sent_tokenize\n    tokenizer = _get_punkt_tokenizer(language)\nC:\\Users\\hp\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\nltk\\tokenize\\__init__.py:105: in _get_punkt_tokenizer\n    return PunktTokenizer(language)\nC:\\Users\\hp\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\nltk\\tokenize\\punkt.py:1744: in __init__\n    self.load_lang(lang)\nC:\\Users\\hp\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\nltk\\tokenize\\punkt.py:1749: in load_lang\n    lang_dir = find(f\"tokenizers/punkt_tab/{lang}/\")\nC:\\Users\\hp\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\nltk\\data.py:579: in find\n    raise LookupError(resource_not_found)\nE   LookupError: \nE   **********************************************************************\nE     Resource \u001b[93mpunkt_tab\u001b[0m not found.\nE     Please use the NLTK Downloader to obtain the resource:\nE   \nE     \u001b[31m>>> import nltk\nE     >>> nltk.download('punkt_tab')\nE     \u001b[0m\nE     For more information see: https://www.nltk.org/data.html\nE   \nE     Attempted to load \u001b[93mtokenizers/punkt_tab/english/\u001b[0m\nE   \nE     Searched in:\nE       - 'C:\\\\Users\\\\hp/nltk_data'\nE       - 'C:\\\\Users\\\\hp\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python313\\\\nltk_data'\nE       - 'C:\\\\Users\\\\hp\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python313\\\\share\\\\nltk_data'\nE       - 'C:\\\\Users\\\\hp\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python313\\\\lib\\\\nltk_data'\nE       - 'C:\\\\Users\\\\hp\\\\AppData\\\\Roaming\\\\nltk_data'\nE       - 'C:\\\\nltk_data'\nE       - 'D:\\\\nltk_data'\nE       - 'E:\\\\nltk_data'\nE   **********************************************************************\n______________ TestEnhancedQueryEngine.test_analyze_query_intent ______________\ncollective-memory-app\\tests\\test_enhanced_query_engine.py:449: in test_analyze_query_intent\n    assert intent == \"list\"\nE   AssertionError: assert 'explain' == 'list'\nE     \nE     - list\nE     + explain\n__________________ TestEnhancedQueryEngine.test_clear_cache ___________________\ncollective-memory-app\\tests\\test_enhanced_query_engine.py:496: in test_clear_cache\n    assert len(_SEMANTIC_CACHE) == 0\nE   AssertionError: assert 1101 == 0\nE    +  where 1101 = len({'key_0': 'value_0', 'key_1': 'value_1', 'key_10': 'value_10', 'key_100': 'value_100', ...})\n______________ TestEnhancedQueryEngine.test_search_with_caching _______________\ncollective-memory-app\\tests\\test_enhanced_query_engine.py:534: in test_search_with_caching\n    assert enhanced_query_engine.cache_misses >= 1\nE   assert 0 >= 1\nE    +  where 0 = <enhanced_query_engine.EnhancedQueryEngine object at 0x000001C0648F9160>.cache_misses\n=========================== short test summary info ===========================\nFAILED collective-memory-app\\tests\\test_enhanced_query_engine.py::TestEnhancedQueryEngine::test_clean_cache\nFAILED collective-memory-app\\tests\\test_enhanced_query_engine.py::TestEnhancedQueryEngine::test_calculate_content_quality\nFAILED collective-memory-app\\tests\\test_enhanced_query_engine.py::TestEnhancedQueryEngine::test_extract_entities\nFAILED collective-memory-app\\tests\\test_enhanced_query_engine.py::TestEnhancedQueryEngine::test_calculate_readability\nFAILED collective-memory-app\\tests\\test_enhanced_query_engine.py::TestEnhancedQueryEngine::test_analyze_query_intent\nFAILED collective-memory-app\\tests\\test_enhanced_query_engine.py::TestEnhancedQueryEngine::test_clear_cache\nFAILED collective-memory-app\\tests\\test_enhanced_query_engine.py::TestEnhancedQueryEngine::test_search_with_caching\n======================== 7 failed, 12 passed in 31.88s ========================\n",
  "stderr": "C:\\Users\\hp\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pytest_asyncio\\plugin.py:208: PytestDeprecationWarning: The configuration option \"asyncio_default_fixture_loop_scope\" is unset.\nThe event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: \"function\", \"class\", \"module\", \"package\", \"session\"\n\n  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))\n",
  "success": false
}